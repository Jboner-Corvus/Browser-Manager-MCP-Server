import e from"path";import{fileURLToPath as o}from"url";import r from"dotenv";import{z as t}from"zod";import{DEFAULT_HEALTH_CHECK_OPTIONS as n}from"./utils/constants.js";const i=o(import.meta.url),s=e.dirname(i);"test"!==process.env.NODE_ENV&&r.config({path:e.resolve(s,"..",".env")});const a=t.object({NODE_ENV:t.enum(["development","production","test"]).default("development"),PORT:t.coerce.number().int().positive().default(8081),LOG_LEVEL:t.enum(["fatal","error","warn","info","debug","trace"]).default("info"),HTTP_STREAM_ENDPOINT:t.string().startsWith("/").default("/stream"),AUTH_TOKEN:t.string().min(16,"AUTH_TOKEN doit comporter au moins 16 caractères."),REQUIRE_AUTH:t.coerce.boolean().default(!1),HEALTH_CHECK_PATH:t.string().startsWith("/").default(n.path).describe("Chemin pour le point de terminaison de vérification de l'état.")}).safeParse(process.env);if(!a.success){console.error("❌ Variables d'environnement invalides détectées dans .env:");for(const e of a.error.issues)console.error(`  - Champ: ${e.path.join(".")||"global"}, Problème: ${e.message}`);console.error("Veuillez corriger les variables d'environnement et redémarrer l'application."),process.exit(1)}export const config=a.data;"production"===config.NODE_ENV&&(!config.AUTH_TOKEN||"YOUR_STRONG_SECRET_TOKEN_HERE_CHANGE_ME"===config.AUTH_TOKEN||"CHANGE_THIS_STRONG_SECRET_TOKEN"===config.AUTH_TOKEN||config.AUTH_TOKEN.length<16)&&(console.error("ERREUR CRITIQUE DE SÉCURITÉ : AUTH_TOKEN est manquant, trop court, ou utilise une valeur par défaut en environnement de PRODUCTION."),console.error("Veuillez définir un AUTH_TOKEN fort et unique dans votre fichier .env pour la production."),process.exit(1));